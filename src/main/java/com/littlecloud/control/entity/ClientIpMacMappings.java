package com.littlecloud.control.entity;

// Generated Jul 29, 2013 5:43:32 PM by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;

import com.peplink.api.db.DBObject;

/**
 * ClientIpMacMappings generated by hbm2java
 */
@Entity
@Table(name = "client_ip_mac_mappings")
public class ClientIpMacMappings extends DBObject implements java.io.Serializable {

	private ClientIpMacMappingsId id;
	private String mac;
	private Integer unixtime;

	public ClientIpMacMappings() {
	}

	public ClientIpMacMappings(ClientIpMacMappingsId id) {
		this.id = id;
	}

	public ClientIpMacMappings(ClientIpMacMappingsId id, String mac,
			Integer unixtime) {
		this.id = id;
		this.mac = mac;
		this.unixtime = unixtime;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "networkId", column = @Column(name = "network_id", nullable = false)),
			@AttributeOverride(name = "deviceId", column = @Column(name = "device_id", nullable = false)),
			@AttributeOverride(name = "ip", column = @Column(name = "ip", nullable = false, length = 45)) })
	public ClientIpMacMappingsId getId() {
		return this.id;
	}

	public void setId(ClientIpMacMappingsId id) {
		this.id = id;
	}

	@Column(name = "mac", length = 45)
	public String getMac() {
		return this.mac;
	}

	public void setMac(String mac) {
		this.mac = mac;
	}

	@Column(name = "unixtime")
	public Integer getUnixtime() {
		return this.unixtime;
	}

	public void setUnixtime(Integer unixtime) {
		this.unixtime = unixtime;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("ClientIpMacMappings [id=");
		builder.append(id);
		builder.append(", mac=");
		builder.append(mac);
		builder.append(", unixtime=");
		builder.append(unixtime);
		builder.append("]");
		return builder.toString();
	}
}
